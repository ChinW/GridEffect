var cloth_width = 30
    , cloth_height = 30
    , spacing = 10
    , accuracy = 3
    , influence_range = 20
    , cut_range = 5
    , tearable_dist =60 ;

var canvas
    , ctx
    , cloth
    , mouse={
        x: 0,
        y: 0,
        px: 0,
        py: 0,
        down: false,
        button: 1 //1 for left click
    }
    , boundsx
    , boundsy;

window.requestAniFrame = 
    window.requestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.mozRequestAnmiationFrame ||
    window.oRequestAnimationFrame ||
    window.msRequestAnimationFrame ||
    function (callback){
        window.setTimeout(callback, 1000/60);
    }

var Point = function(x, y){
    this.x = x;
    this.y = y;

    this.px = x;
    this.py = y;

    this.pinx = null
    this.piny = null

    this.constraints = []
}

Point.prototype.push_constraint = function(point){
    this.constraints.push(
        new Constraint(this, point)
    )
}

Point.prototype.pin = function(x, y){
    this.pinx = x
    this.piny = y
}

Point.prototype.draw = function(){
    var i = this.constraints.length
    while(i--)
        this.constraints[i].draw()
}

Point.prototype.update = function(delta){
    if(mouse.down){
        var diff_x = mouse.x - this.x
            , diff_y = mouse.y - this.y
            , dist = Math.sqrt(diff_x*diff_x +diff_y*diff_y)

        if(mouse.button == 1){
            if(dist < influence_range){
                var influence_x = mouse.x - mouse.px
                    , influence_y = mouse.y - mouse.py
                    , influence_diff = (influence_range-dist)/influence_range
                
                this.px = this.x - influence_x*1.8
                this.py = this.y - influence_y*1.8
                // console.log(influence_diff)

            }
        }else if(dist<cut_range){
            this.constraints = []
        }
    }


    delta *= delta

    var ny = this.y + (this.y - this.py ) * 0.99 
    var nx = this.x + (this.x - this.px ) * 0.99

    this.py = this.y
    this.px = this.x 

    this.y = ny
    this.x = nx

}

Point.prototype.resolveConstraints = function(){
    if(this.pinx != null && this.piny != null){
        this.x = this.pinx
        this.y = this.piny
        return
    }

    var i = this.constraints.length
    while(i--)
        this.constraints[i].resolve()

    if(this.x > boundsx){
        this.x = 2*boundsx - this.x
    }else if(this.x < 1){
        this.x = 2- this.x
    }
    if(this.y > boundsy){
        this.y = 2*boundsy - this.y
    }else if(this.y < 1){
        this.y = 2 - this.y
    }

}

Point.prototype.removeConstraint = function (constraint){
    this.constraints.splice(this.constraints.indexOf(constraint),1)
}

var Constraint = function(p1 ,p2){
    this.p1 = p1 //p1 means start point
    this.p2 = p2
    this.length = spacing
}

Constraint.prototype.draw = function(){
    ctx.moveTo(this.p1.x, this.p1.y)
    ctx.lineTo(this.p2.x, this.p2.y)
}

Constraint.prototype.resolve = function(){
    var diff_x = this.p1.x - this.p2.x
        , diff_y = this.p1.y - this.p2.y
        , dist = Math.sqrt( diff_x*diff_x + diff_y*diff_y)
        , diff = (this.length - dist ) / dist

    var nx =  diff_x * diff * 0.01
        , ny =  diff_y  * diff * 0.01

    this.p1.x -= nx
    this.p1.y -= ny 
    this.p2.x += nx
    this.p2.y += ny
}

var Cloth = function(){
    this.points = []

    var start_x = canvas.width /2 - cloth_width * spacing/2
    var start_y = 20

    for(var y=0; y <= cloth_height; y++){
        for(var x = 0; x <= cloth_width; x++){
            var p = new Point(start_x + x*spacing, start_y + y*spacing)
            // console.log(p.push_constraint(1))
            x != 0 && p.push_constraint( this.points[this.points.length - 1 ] ) 
            y != 0 && ( p.push_constraint( this.points[x + (cloth_width+1)*(y-1)] ) )
            y == 0 && ( p.pin(p.x, p.y) )
            
            this.points.push( p )
        }
    }
    
}

Cloth.prototype.update = function(){
    var i = this.points.length
    while(i--)
        this.points[i].update(0.016)
}

Cloth.prototype.draw = function(){
    ctx.beginPath();
    var p = accuracy
    while(p--){
        var i = this.points.length
        while(i--)
            this.points[i].resolveConstraints()
    }

    i = this.points.length
    while(i--)
        this.points[i].draw()
    ctx.stroke()
}

window.onload = function(){
    canvas = document.getElementById("c")
    canvas.width = window.innerWidth-40
    canvas.height = window.innerHeight - 40
    ctx = canvas.getContext("2d")

    start()
}

function update(){
    // debugger;
    ctx.clearRect(0,0, canvas.width, canvas.height)
    cloth.update()
    cloth.draw()

    boundsx = canvas.width - 1
    boundsy = canvas.height - 1

    requestAniFrame(update)
}

function start(){
    console.log("Animation Start")
    canvas.onmousedown = function(e){
        console.log(e.which)

        mouse.button = e.which
        
        mouse.px = mouse.x
        mouse.py = mouse.y

        mouse.x = e.layerX
        mouse.y = e.layerY
        mouse.down = true

        e.preventDefault()
    }
    canvas.onmousemove = function(e){
        mouse.px = mouse.x
        mouse.py = mouse.y

        mouse.x = e.layerX
        mouse.y = e.layerY
        e.preventDefault()

    }
    canvas.onmouseup = function(e){
        mouse.down = false

        e.preventDefault()
    }

    canvas.oncontextmenu = function(e){
        e.preventDefault()
    }

    cloth = new Cloth()
    requestAniFrame(update)
}